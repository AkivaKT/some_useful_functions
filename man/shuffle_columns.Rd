% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/shuffle_function.r
\name{shuffle_columns}
\alias{shuffle_columns}
\title{Shuffle Columns in a Dataset}
\usage{
shuffle_columns(
  dataset,
  column_lists = NULL,
  oversample = FALSE,
  oversample_factor = 1,
  seed = NULL
)
}
\arguments{
\item{dataset}{A data frame containing the dataset.}

\item{column_lists}{A list of lists specifying columns to be shuffled. Each
inner list can contain either column names or column indices. If not
provided, all columns will be shuffled individually.}

\item{oversample}{Logical. If TRUE, oversampling will be applied to the dataset
before shuffling. Default is FALSE.}

\item{oversample_factor}{Numeric. The factor by which the dataset should be
oversampled. It should be greater than 1. For example, an oversample_factor
of 1.2 will result in a 20% increase in dataset size. Applicable only if
oversample is TRUE. Default is 1.}

\item{seed}{An optional numeric value to set the random seed. When provided,
the shuffling process will be deterministic. If not provided, the shuffling
will use a different random seed each time, resulting in different shuffling.}
}
\value{
A shuffled dataset.
}
\description{
This function shuffles specified columns in a dataset. It offers the flexibility
to shuffle columns individually or together, while preserving the order of
missing values. Additionally, an oversampling option is provided to augment the
dataset size before shuffling.
}
\examples{
data <- data.frame(
  A = c(1, 2, 3, 4, NA),
  B = c(5, 6, 7, 8, NA),
  C = c(9, 10, 11, 12, NA),
  D = c(13, 14, 15, 16, NA)
)

# Shuffle columns A and B together, shuffle column C individually,
# shuffle column D individually
column_lists <- list(c("A", "B"), c("C"), c("D"))

shuffled_data <- shuffle_columns(data, column_lists, oversample = TRUE, oversample_factor = 1.2, seed = 123)

}
